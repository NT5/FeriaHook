<?php

namespace NT5\Bulker\Application\Api\Areas\Proyectos;

use NT5\Bulker\Modules\Extended;
use NT5\Bulker\Modules\App\Proyectos;
use NT5\Bulker\Modules\App\Proyectos\ProyectoEntry;
use NT5\Bulker\Application\Api\LoggedArea;
use NT5\Bulker\Modules\Util\Functions;

/**
 * 
 */
class registerProyecto extends LoggedArea {

    /**
     *
     * @var ProyectoEntry
     */
    private $ProyectoEntry;

    /**
     *
     * @var Proyectos
     */
    private $Proyectos;

    /**
     * 
     * @param Extended $Extended
     */
    public function __construct(Extended $Extended = NULL) {
        parent::__construct($Extended);
    }

    public function initVars() {
        $this->setVars([
            'proyecto' => $this->ProyectoEntry->getJson()
        ]);
    }

    public function CheckPost() {

        $NombreProyecto = $this->getPost('nombreProyecto');
        $Descripcion = $this->getPost('descripcionProyecto');
        $Internet = $this->getPost('requiereInternet');
        $Electricidad = $this->getPost('requiereElectricidad');
        $EsInvestigacion = $this->getPost('esInvestigacion');
        $IdCarrera = $this->getPost('idCarrera');
        $IdAsignatura = $this->getPost('idAsignatura');
        $IdCategoria = $this->getPost('idCategoria');

        if (!Functions::mis_null(
                        $NombreProyecto,
                        $Descripcion,
                        $Internet,
                        $Electricidad,
                        $EsInvestigacion,
                        $IdCarrera,
                        $IdAsignatura,
                        $IdCategoria
                )) {
            $this->ProyectoEntry = $this->registerProyecto($NombreProyecto, $Descripcion, $Internet, $Electricidad, $EsInvestigacion, $IdCarrera, $IdAsignatura, $IdCategoria);
        } else {
            $this->setVars([
                'error.code' => 1,
                'error.message' => 'No valid post body'
            ]);
        }
    }

    public function setUp() {
        $this->Proyectos = new Proyectos($this->Extended());
        $this->ProyectoEntry = new ProyectoEntry();
    }

    /**
     * 
     * @return Proyectos
     */
    private function getProyecto(): Proyectos {
        return $this->Proyectos;
    }

    /**
     * 
     * @param string $NombreProyecto
     * @param string $Descripcion
     * @param int $Internet
     * @param int $Electricidad
     * @param int $EsInvestigacion
     * @param int $IdCarrera
     * @param int $IdAsignatura
     * @param int $IdCategoria
     * @return ProyectoEntry
     */
    private function registerProyecto(string $NombreProyecto, string $Descripcion, int $Internet, int $Electricidad, int $EsInvestigacion, int $IdCarrera, int $IdAsignatura, int $IdCategoria): ProyectoEntry {
        $user = $this->getUser();
        $IdTutor = $user->getUserId();

        $proyecto = $this->getProyecto()->registreProyecto($NombreProyecto, $Descripcion, $Internet, $Electricidad, $EsInvestigacion, $IdCarrera, $IdAsignatura, $IdTutor, $IdCategoria);

        return $proyecto;
    }

}

